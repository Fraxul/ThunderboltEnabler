#pragma once
#include "IOThunderboltNub.h"

class IOThunderboltPort;
class IOThunderboltEEPROM;
class IOThunderboltReceiveCommand;
class IOThunderboltAbstractMicro;
class IOThunderboltConfigCommand;

class IOThunderboltSwitch : public IOThunderboltNub {
  OSDeclareDefaultStructors(IOThunderboltSwitch);
public:
  // OSObject
  virtual void free() override;

  // IOService
  virtual void systemWillShutdown(IOOptionBits) override;
  virtual bool finalize(IOOptionBits) override;
  virtual bool matchPropertyTable(OSDictionary*) override;
  virtual bool attach(IOService*) override;
  virtual IOReturn setPowerState(unsigned long, IOService *) override;

  // IOThunderboltNub
  virtual bool initWithController(IOThunderboltController *) override;
  virtual unsigned int getThunderboltDepth() override;
  virtual uint64_t getRouteString() override;

  // IOThunderboltSwitch
  virtual void createResources();
  virtual void destroyResources();
  virtual void listenerCallback(void *,IOThunderboltReceiveCommand *);
  virtual void createPortArrayWithCapacity(unsigned int);
  virtual void freePortArray();
  virtual void removePortAtIndex(int);
  virtual void processChild(unsigned int *,unsigned int,unsigned int);
  virtual void processXDomainChild(unsigned int);
  virtual void setupPowerManagement();
  virtual void destroyPowerManagement();
  virtual void processDeviceScanResults(unsigned int *,unsigned int,unsigned long long,unsigned int,unsigned int);
  virtual void registerAll(bool *);
  virtual void configWriteDWord(unsigned long long,unsigned int,unsigned int,unsigned int,unsigned int);
  virtual void configReadDWord(unsigned long long,unsigned int,unsigned int,unsigned int,unsigned int *);
  virtual void i2cWriteDWord(unsigned char,unsigned char,unsigned int);
  virtual void i2cReadDWord(unsigned char,unsigned char,unsigned int *);
  virtual void fullScan();
  virtual void publishMicroVersions();
  virtual void readEEPROM();
  virtual void programTopologyIDDepthAndUpstream();
  virtual void updateTopologyID(unsigned long long,unsigned int,unsigned int);
  virtual void readDeviceSpace();
  virtual void enablePlugEvents(bool);
  virtual void portScan();
  virtual void scanPort(unsigned int);
  virtual void enableAPM();
  virtual void enableAPMForPort(unsigned int);
  virtual void childDeviceScan();
  virtual void childDeviceScanForPort(unsigned int,bool);
  virtual void resetChild(unsigned long long);
  virtual void linkPartnerReset(unsigned short);
  virtual void sendNotifyAck(unsigned int);
  virtual void getDevicesConnectedState(bool *);
  virtual void updateCMVersionForPort(IOThunderboltPort *);
  virtual void discoverMicroForPort(IOThunderboltPort *);
  virtual void earlyWake();
  virtual void lateSleep();
  virtual void lateSleepPhase2();
  virtual void isRestored();
  virtual void needsEarlyWake();
  virtual void setupI2CCommandQueue();
  virtual void childSwitchForUID(unsigned long long);
  virtual void invalidateClientsOnPort(IOThunderboltPort *);
  virtual void terminateInvalidClientsOnPort(IOThunderboltPort *);
  virtual IOService* findValidClientForPort(IOThunderboltPort *);
  virtual void i2cRead(unsigned char,unsigned char,void *,unsigned int);
  virtual IOThunderboltPort* portAtIndex(int,bool);
  virtual IOThunderboltPort* getUpstreamPort();
  virtual void getAltUpstreamPort(IOThunderboltPort *);
  virtual void getI2CCommandQueue();
  virtual void getUID();
  virtual IOThunderboltEEPROM* getEEPROM();
  virtual unsigned int getMaxPortNumber();
  virtual void setInvalid();
  virtual bool isInvalid();
  virtual void enableTimeSyncMasterForPortSynchronous(unsigned int,bool);
  virtual void enableTimeSyncSlaveForPortSynchronous(unsigned int,bool);
  virtual void resolveMicros();
  virtual void resolvePortAffinity();
  virtual void weakenTMUFilters();
  virtual void strengthenTMUFilters();
  virtual void linkAll();
  virtual void assignLanes();
  virtual void sendPrepareToSleepMessageToMicro(unsigned char,unsigned char,unsigned int);
  virtual void lateSleepPhase3();
  virtual void wakeAllPorts();
  virtual void discoverXDomainLinks();
  virtual void discoverXDomainLinksForPort(unsigned int);
  virtual void getLocalTime(IOThunderboltTimeStamp *);
  virtual void syncLocalTimeToRootSwitch();
  virtual void postLocalTime(IOThunderboltTimeStamp *);
  virtual void resolveIECSTarget(unsigned int,unsigned int,unsigned int,bool *,unsigned int *);
  virtual void setupIECSCommandQueue();
  virtual void iecsRead(unsigned int,unsigned int,unsigned int,void *,unsigned int,unsigned int);
  virtual void iecsWrite(unsigned int,unsigned int,unsigned int,void *,unsigned int,unsigned int);
  virtual void wakeAllPortsInternal();
  virtual void resetMessagedArray();
  virtual void updateConfiguredStateForPort(IOThunderboltPort *);
  virtual void getIECSCommandQueue();
  virtual bool hasDPCrossbar();
  virtual bool isDPCrossbarCrossed();
  virtual void setDPCrossbar(bool);
  virtual void getSwitchesAtDepth(OSSet *,unsigned int);
  virtual uint32_t getVendorID();
  virtual uint32_t getDeviceID();
  virtual bool isPortConnected(IOThunderboltPort *,bool);
  virtual void determineWakeReason();
  virtual void updateHostConnectState();
  virtual void identifyHWRevision();
  virtual void write8051(unsigned int,unsigned int,unsigned int,unsigned int);
  virtual void read8051(unsigned int,unsigned int,unsigned int,unsigned int *);
  virtual void notifyCommandCallback(void *,int,IOThunderboltConfigCommand *);
  virtual void findCapability(unsigned long long,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int *);
  virtual void terminateInvalid();
  virtual void isLinkUp(IOThunderboltPort *,bool *);
  virtual void getPortSetForBus(unsigned int,unsigned int);
  virtual void addPortForMicro(IOThunderboltPort *,unsigned char,unsigned char);
  virtual void removePortForMicro(IOThunderboltPort *,unsigned char,unsigned char);
  virtual void setPortSetReady(bool);
  virtual void activatePortSets();
  virtual void readEEPROMInternal();
  virtual void setTargetLinkWidthToMax(IOThunderboltPort *);
  virtual void syncTargetAndNegotiatedWidth(IOThunderboltPort *);
  virtual void resolvePeerPorts(IOThunderboltPort *);
  virtual void disableUnusedLinks(IOThunderboltPort *);
  virtual void treeApply(void (OSMetaClassBase::*)(),void *,void *,void *,void *);
  virtual void resetPortState();
  virtual void preEarlyWake();
  virtual void publishSocketIDs();
  virtual void getMaxLinkWidth(IOThunderboltPort *,unsigned int *);
  virtual void publishLinkProperties(IOThunderboltPort *);
  virtual void updateBusPowerProperties();
  virtual void earlyWakeDelay();
  virtual void platformResetComplete();
  virtual void updateDeviceID();
  virtual void acquireDPAdapterSynchronous(unsigned int);
  virtual void dropDPAdapterSynchronous(unsigned int);
  virtual void hasPCITunnel();
  virtual void wakeLocalPorts();
  virtual void printWakeReason(char *);
  virtual void getMicros(IOThunderboltAbstractMicro **,OSArray **);
  virtual void getRID();
  virtual unsigned int getChipType();
  virtual void registerAllInternal();
  virtual void handlePlugEventPacket(unsigned int,bool);
  virtual bool usingDefaultDROM();
  virtual void checkForDROMCRC32Error(unsigned int,unsigned int);
  virtual void updateDPPortAffinity();
  virtual void shouldSkipEnumeration();
  virtual void willReceiveSleepIndication();
  virtual void getPortSetForType(unsigned int);
  virtual void getClientSetForName(char const*);
  virtual void _RESERVEDIOThunderboltSwitch0();
  virtual void _RESERVEDIOThunderboltSwitch1();
  virtual void _RESERVEDIOThunderboltSwitch2();
  virtual void _RESERVEDIOThunderboltSwitch3();
  virtual void _RESERVEDIOThunderboltSwitch4();
  virtual void _RESERVEDIOThunderboltSwitch5();
  virtual void _RESERVEDIOThunderboltSwitch6();
  virtual void _RESERVEDIOThunderboltSwitch7();
  virtual void _RESERVEDIOThunderboltSwitch8();
  virtual void _RESERVEDIOThunderboltSwitch9();
  virtual void _RESERVEDIOThunderboltSwitch10();
  virtual void _RESERVEDIOThunderboltSwitch11();
  virtual void _RESERVEDIOThunderboltSwitch12();
  virtual void _RESERVEDIOThunderboltSwitch13();
  virtual void _RESERVEDIOThunderboltSwitch14();
  virtual void _RESERVEDIOThunderboltSwitch15();
  virtual void _RESERVEDIOThunderboltSwitch16();
  virtual void _RESERVEDIOThunderboltSwitch17();
  virtual void _RESERVEDIOThunderboltSwitch18();
  virtual void _RESERVEDIOThunderboltSwitch19();
  virtual void _RESERVEDIOThunderboltSwitch20();
  virtual void _RESERVEDIOThunderboltSwitch21();
  virtual void _RESERVEDIOThunderboltSwitch22();
  virtual void _RESERVEDIOThunderboltSwitch23();
  virtual void _RESERVEDIOThunderboltSwitch24();
  virtual void _RESERVEDIOThunderboltSwitch25();
  virtual void _RESERVEDIOThunderboltSwitch26();
  virtual void _RESERVEDIOThunderboltSwitch27();
  virtual void _RESERVEDIOThunderboltSwitch28();
  virtual void _RESERVEDIOThunderboltSwitch29();
  virtual void _RESERVEDIOThunderboltSwitch30();
  virtual void _RESERVEDIOThunderboltSwitch31();
};

